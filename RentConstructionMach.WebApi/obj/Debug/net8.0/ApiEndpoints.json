[
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.BlogsController",
    "Method": "BlogList",
    "RelativePath": "api/Blogs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.BlogsController",
    "Method": "CreateBlog",
    "RelativePath": "api/Blogs",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "RentConstructionMach.Application.Features.Mediator.Commands.BlogCommands.CreateBlogCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.BlogsController",
    "Method": "RemoveBlog",
    "RelativePath": "api/Blogs",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.BlogsController",
    "Method": "UpdateBlog",
    "RelativePath": "api/Blogs",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "RentConstructionMach.Application.Features.Mediator.Commands.BlogCommands.UpdateBlogCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.BlogsController",
    "Method": "GetBlog",
    "RelativePath": "api/Blogs/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.FooterAddressesController",
    "Method": "FooterAddressList",
    "RelativePath": "api/FooterAddresses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.FooterAddressesController",
    "Method": "CreateFooterAddress",
    "RelativePath": "api/FooterAddresses",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "RentConstructionMach.Application.Features.Mediator.Commands.FooterAddressCommands.CreateFooterAddressCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.FooterAddressesController",
    "Method": "RemoveFooterAddress",
    "RelativePath": "api/FooterAddresses",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.FooterAddressesController",
    "Method": "UpdateFooterAddress",
    "RelativePath": "api/FooterAddresses",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "RentConstructionMach.Application.Features.Mediator.Commands.FooterAddressCommands.UpdateFooterAddressCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.FooterAddressesController",
    "Method": "GetFooterAddress",
    "RelativePath": "api/FooterAddresses/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.TagCloudsController",
    "Method": "TagCloudList",
    "RelativePath": "api/TagClouds",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.TagCloudsController",
    "Method": "CreateTagCloud",
    "RelativePath": "api/TagClouds",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "RentConstructionMach.Application.Features.Mediator.Commands.TagCloudCommands.CreateTagCloudCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.TagCloudsController",
    "Method": "RemoveTagCloud",
    "RelativePath": "api/TagClouds",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.TagCloudsController",
    "Method": "UpdateTagCloud",
    "RelativePath": "api/TagClouds",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "RentConstructionMach.Application.Features.Mediator.Commands.TagCloudCommands.UpdateTagCloudCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.TagCloudsController",
    "Method": "GetTagCloud",
    "RelativePath": "api/TagClouds/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentConstructionMach.WebApi.Controllers.TagCloudsController",
    "Method": "GetTagCloudByBlogId",
    "RelativePath": "api/TagClouds/GetTagCloudByBlogId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]